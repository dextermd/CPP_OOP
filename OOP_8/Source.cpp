#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>
#include "Rectangle.h"
#include "Coord.h"
#include "Stock.h"

using namespace std;

int main()
{

#if 1

    //------------------------------------------------------------
    // Самостоятельная работа
    //------------------------------------------------------------
    /*
    Создать класс – пакет акций.   // Stock

    Хранит информацию:
        - наименование компании (строка без динамической памяти);
        - площадка (строка с динамической памятью);
        - количество акций в пакете(целое);
        - цена каждой акции(дробное);
        - общая стоимость всех акций в пакете(дробное) - расчетная величина.

    Перечень операций :
         - получить пакет в компании(конструктор(ы));
         - метод отображения данных пакета;
         - метод ввода данных с клавиатуры;
         - методы доступа к полям

    - приобрести дополнительные акции того же пакета
    (количество акций, стоимость одной акции);

    - продать некоторое количество акций по определенной цене
    (причем нельзя продать больше, чем приобретено до этого),
    в случае успеха вернуть правду, в противном случае - ложь

    Примечание: при покупке/продаже акций осуществляется перерассчет
    общей стоимости всех акций по последней цене покупки/продажи.

    - Деструктор

    Продемонстрировать вызов конструктора копий(3 случая).
    */

    Stock s;
    s.show();


#endif 


#if 0

    // Дополнить класс Прямоугольник полем-адресом, 
    // память выделять динамически.
    // Поле - Наименование (name)

    class Rectangle a(20, 6, '+', "desk", "red"), c, d("board", "white");
    a.show();
    cout << endl;
    c.show();
    cout << endl;
    d.show();

    //cout << endl;
    //a.init();
    //a.show();

    cout << endl;
    a.set_name("Computer table");
    a.show();

    class Rectangle b; // Конструктор оператор копий
    // b = c; // Пока не работает
    b.show();
    cout << endl;

#endif 



#if 0
    Coord a(10, 3), b(2, 6), c;

    cout << "\nКол-во созданных обьектов: " << Coord::get_count_obj();

    c = a.add(b);
    c.show();
    cout << endl;

    Coord d = c;
    d.show();
    cout << endl;

    cout << "\nКол-во созданных обьектов: " << Coord::get_count_obj();
    cout << endl << endl;

    //------------------------------------------------------------
    /*
    Конструктор копий вызывается автоматически в трех случаях:

        1. При передаче объекта как параметр функции по значению
            Например, coord add(const coord b);

        2. При возврате временного объекта из функции
            coord add(const coord b);

        3. При объявлении объекта и одновременной инициализации другим объектом
            coord d = a;
    */

#endif 


#if 0

    Coord c, v, a;
    c.show();
    cout << endl;
    c.reset(10, -10);
    c.show();
    cout << endl;
    c.reset(12);
    c.show();
    cout << endl;
    c.reset();
    c.show();
    cout << endl;

    cout << "\nКол-во созданных обьектов: " << Coord::get_count_obj();




    cout << endl << endl;

#endif



    _getch;
}