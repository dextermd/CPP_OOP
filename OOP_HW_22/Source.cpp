//#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <fstream>				// Для работы с файлами C++
#include <conio.h>
#include <iomanip>

#include "MyString.h"
#include "MyArray.h"
#include "ListOneType.h"
#include "StudentAgr.h"
#include "Coord.h"

using namespace std;


int main()
{

#if 0

	/*
		Задание 1. 
			Для уже существующих классов(MyArray, ListOneType, StudentAgr) добавьте реализацию функционала для работы с файлами на языке С++:
				− перегрузку потока для записи объекта класса в бинарный файл;
				− перегрузку потока для чтения объекта класса из бинарного файла с инициализацией этого объекта;
				− метод для записи объекта класса в текстовый файл.
			Продемонстрируйте добавленный функционал классов на примерах.
	*/


#endif

#if 0

	/*
		Задание 2. 
			Напишите программу для регистрации пользователей, создать класс «Пользователь».
			Характеристики «Пользователя» : 
				- логин(должен быть уникальным в списке пользователей),
				- пароль,
				- имя,
				- фамилия,
				- адрес,
				- телефон,
				- e - mail
			(можно добавить поля по желанию, например, список сообщений, даты просмотра аккаунта и т.д.).

			Для описания полей используйте уже существующий класс «Строка / MyString» и другие пользовательские классы по необходимости.
		
			Для хранения пользователей используйте класс «Список / ListOneType» либо «Бинарное дерево поиска / MyTree».

			Работу программы организуйте при помощи меню :
				- Регистрация
				− Вход в аккаунт
				− Список пользователей
				− Выход из программы

			При регистрации пользователя необходимо проверить, нет ли пользователя с таким
			логином, в противном случае вывести сообщение, что такой логин уже используется.

			При входе в аккаунт необходимо запросить логин.Если такой пользователь существует
			запросить пароль.В случае ввода верного пароля вывести данные пользователя на экран.

			В случае ввода неверного пароля можно предложить вариант ввести снова либо выйти отказаться от ввода.
		
			При выводе списка пользователей отображать только логины зарегистрированных
			пользователей.Данные считывать из двоичного файла, в котором записан список
			пользователей.Если список еще пуст, вывести сообщение.
		
			При запуске программы считывать данные из двоичного файла с инициализацией списка пользователей.

			При выходе из программы сохранять список пользователей в двоичный файл и в
			текстовый в формате, удобном для чтения.
		
			По желанию можно расширить функционал программы.
		*/

#endif

}