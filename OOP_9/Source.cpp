#include <iostream>
#include <stdlib.h>
#include <conio.h>
#include <iomanip>
#include <Windows.h>
#include "Rectangle.h"
#include "Coord.h"
#include "Stock.h"

using namespace std;

int main()
{

#if 0

    //------------------------------------------------------------
    // Самостоятельная работа
    //------------------------------------------------------------
    /*
    Создать класс – пакет акций. // Stock

    Хранит информацию:
        + наименование компании (строка без динамической памяти);
        + площадка (строка с динамической памятью);
        + количество акций в пакете(целое);
        + цена каждой акции(дробное);
        + общая стоимость всех акций в пакете(дробное) - расчетная величина.

    Перечень операций :
         + получить пакет в компании(конструктор(ы));
         + конструктор копирования
         + метод отображения данных пакета;
         + метод ввода данных с клавиатуры;
         + методы доступа к полям

    - приобрести дополнительные акции того же пакета
    (количество акций, стоимость одной акции);
    
    - продать некоторое количество акций по определенной цене
    (причем нельзя продать больше, чем приобретено до этого),
    в случае успеха вернуть правду, в противном случае - ложь

    Примечание: при покупке/продаже акций осуществляется перерассчет
    общей стоимости всех акций по последней цене покупки/продажи.

    - Деструктор

    Продемонстрировать вызов конструктора копий(3 случая).
    */

    Stock s, a("Name1", "Platform1", 5, 50);
    s.show();
    cout << endl;
    a.show();
    cout << endl;
    Stock b("Name2", "Platform2", 5,55.5);
    Stock c = b; // или Stock с(b)
    c.show();
    c.set_platform("AA");
    c.show();
    c.set_price(60);
    c.show();
    c.set_qty(6);
    c.show();

    c.buy_stock(10);
    c.show();
    if (c.sell_stock(10))
    {
        c.show();
    }
    else {
        cout << "\nУ вас недостаточно акций для продажи!\n";
    }

    Stock i;
    i.init();
    i.show();
    a.init();
    a.show();

#endif 





    _getch;
}